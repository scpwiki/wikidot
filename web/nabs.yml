# -- UTILITY

# Use this like:
# $ pnpm compose up
# $ pnpm compose build
compose:
  - cd ../install/local/dev
  - docker-compose -p wikijump -f docker-compose.yaml -f docker-compose.dev.yaml

# Builds like `pnpm compose build` but busts the cache for the nginx step.
# This ensures that the repo is freshly cloned and that packages will install correctly.
# TODO: make this work for PHP as well
compose:build:
  - cd ../install/local/dev
  - >
    docker-compose -p wikijump
    -f docker-compose.yaml -f docker-compose.dev.yaml
    build
    --build-arg CACHEBUST=0

# Completely rebuilds by passing `--no-cache`.
compose:rebuild:
  $depend: []
  $action: ultra --raw compose:rebuild:cmd

  cmd:
    - pnpm compose down
    - ultra compose:rebuild:build

  build: >
    cd ../install/local/dev &&
    docker-compose -p wikijump
    -f docker-compose.yaml -f docker-compose.dev.yaml
    build --no-cache

# -- BUILD

build:
  $depend: []
  $action: ultra --build build:cmd

  cmd:
    - pnpm build:legacy
    - pnpm build:frontend
    - pnpm build:local

  legacy: node scripts/build-legacy.js build
  frontend: vite build
  local: pnpm compose:build

build:remote:
  - pnpm build:legacy
  - pnpm build:frontend

# -- DEV

dev:
  $depend: []
  $action:
    - pnpm build:local
    - ultra dev:cmd

  cmd:
    - pnpm dev:legacy
    - pnpm dev:frontend
    - pnpm dev:local

  legacy: node scripts/build-legacy.js dev
  frontend: vite dev
  local: pnpm compose up
